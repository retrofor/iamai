name: Publish Docker image

on:
  push:
    # branches:
    #   - main
    #   - master
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'The version to publish manually'
        required: true
        default: 'latest'

# This creates an environment variable called `IMAGE_NAME ` with the value `ghtoken_product_demo`.
env:
  IMAGE_NAME: iamai-prod
#
jobs:
  # This pushes the image to GitHub Packages.
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v5

      - name: Build image
        run: sudo docker build . --file Dockerfile.prod --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.ACCESS_TOKEN }}" | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        if: "startsWith(github.ref, 'refs/tags/')"
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # This strips the git ref prefix from the version.
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION=${{ github.event.inputs.version }} 
          else
            VERSION=$(echo "${{ github.ref }}")
          fi

          # This strips the "v" prefix from the tag name.
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo "$VERSION" | sed -e 's|refs/tags/v||')
          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          sudo docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          sudo docker push $IMAGE_ID:$VERSION
